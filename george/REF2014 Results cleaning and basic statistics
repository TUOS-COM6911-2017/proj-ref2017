import pandas as pd
import xlrd
from openpyxl import load_workbook
import numpy as np

# Open the excel file
ref_gen = pd.read_excel("/home/kokos/Desktop/Msc Data Analytics/COM6911 Industrial Project/REF2014 Results.xlsx")

# Remove irrelevant mistaken rows
ref_gen = ref_gen.drop(ref_gen.index[[0,1,2,3,4,5]])

# Replace header with what was in row 4(which are the headers)
new_header = ref_gen.iloc[0]
ref_gen = ref_gen[1:]
ref_gen.columns = new_header

# Make columns easily codeable by name
ref_gen = ref_gen.rename(columns = {"Institution code (UKPRN)":"inst_code", "Institution name":"inst_name", "Institution sort order":"inst_sort", "Main panel":"main_panel", "Unit of assessment number":"unit_asses_num"}) 
ref_gen = ref_gen.rename(columns = {"Unit of assessment name":"unit_asses_name", "Multiple submission letter":"mult_sub_let", "Multiple submission name":"mult_sub_name"}) 
ref_gen = ref_gen.rename(columns = {"Joint submission":"joint_sub", "Profile":"profile", "FTE Category A staff submitted":"fte_cata"}) 
ref_gen = ref_gen.rename(columns = {"4*":"four_str", "3*":"three_str", "2*":"two_str", "1*":"one_str"})

# Drop unwanted columns
ref_gen.drop(["mult_sub_let","mult_sub_name", "joint_sub"], axis = 1, inplace = True)

# Create a new data frame containing only overall scores

ref_gen_overall = ref_gen[ref_gen["profile"].str.contains("Overall")]

# list first 10 unis with best 4* percentages

four_s_list = []
uni_name_l = []
uni_id_l = []

for code in uniq_univ:
    four_s = ref_gen_overall.four_str[ref_gen_overall.inst_code==code].mean()
    four_s_list.append(four_s)
    uni_name = ref_gen_overall.inst_name[ref_gen_overall.inst_code==code].unique()
    uni_name_l.append(uni_name)
    
    uni_id = ref_gen_overall.inst_code[ref_gen_overall.inst_code==code].unique()
    uni_id_l.append(uni_id)

uni_id_list = np.vstack(uni_id_l).tolist()
uni_name_list = np.vstack(uni_name_l).tolist()

df_fourstar = pd.DataFrame({"4*": four_s_list, "Inst. id":uni_id_list, "Inst. Name":uni_name_list})

## dislay top ten 4* institutes
topten_four = df_fourstar.sort_values("4*", ascending = False)[0:10]

# list first 10 unis with best 3* percentages

three_s_list = []

for code in uniq_univ:
    three_s = ref_gen_overall.three_str[ref_gen_overall.inst_code==code].mean()
    three_s_list.append(three_s)
 
df_threestar = pd.DataFrame({"3*": three_s_list, "Inst. id":uni_id_list, "Inst. Name":uni_name_list})
## dislay top ten 3* institutes
topten_three = df_threestar.sort_values("3*", ascending = False)[0:10]

# Top by FTE category

ref_gen_overall
fte_list = []
for code in uniq_univ:
    fte = ref_gen_overall.fte_cata[ref_gen_overall.inst_code==code].mean()
    fte_list.append(fte)

df_fte = pd.DataFrame({"FTE_cat_A": fte_list, "Inst. id":uni_id_list, "Inst. Name":uni_name_list})
df_fte.sort_values("FTE_cat_A", ascending = False)[0:10]

#ref_gen[ref_gen["inst_name"].str.contains("London Business School")]
